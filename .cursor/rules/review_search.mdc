---
description: 
globs: 
---
# レビューと検索機能の概要

REVIEW!

## レビュー機能

### レビューデータモデル

レビューは以下の主要な情報を含みます：

1. **基本情報**
   - ゲームID（BGG ID）
   - ユーザーID
   - 作成日時・更新日時

2. **評価スコア**
   - 総合評価（overall_score）: 10点満点
   - ルールの複雑さ（rule_complexity）: 5段階
   - 運要素（luck_factor）: 5段階
   - 相互作用（interaction）: 5段階
   - ダウンタイム（downtime）: 5段階

3. **プレイ情報**
   - プレイ時間（play_time）
   - おすすめプレイ人数（recommended_players）

4. **分類情報**
   - メカニクス（mechanics）: 複数選択可能
   - カテゴリー（categoies）: 複数選択可能
   - カスタムタグ（custom_tags）: ユーザーが自由に追加可能

5. **コメント**
   - 短いコメント（short_comment）

6. **ソーシャル情報**
   - いいね数（likes_count）
   - 現在のユーザーがいいねしたかどうか（liked_by_current_user）

### レビュー投稿フロー

1. ユーザーがゲーム詳細ページから「レビューを書く」ボタンをクリック
2. レビュー投稿フォームに必要情報を入力
   - スライダーを使用して各評価項目のスコアを設定
   - おすすめプレイ人数を選択
   - メカニクスとカテゴリーを選択
   - コメントを入力
3. フォーム送信時に `postReview` 関数を呼び出し
4. バックエンドの `ReviewsController#create` アクションでレビューを保存
5. 保存成功時にゲーム詳細ページにリダイレクト

### レビュー表示

1. ゲーム詳細ページでは `ReviewList` コンポーネントを使用してレビューを表示
2. レビューは以下の情報を含む：
   - ユーザー名
   - 総合評価
   - 投稿日
   - コメント
   - いいね数
   - いいねボタン（ログイン済みの場合）

### レビュー統計

ゲーム詳細ページでは、レビューから集計した以下の統計情報を表示：

1. **平均評価スコア**
   - 総合評価の平均
   - ルールの複雑さの平均
   - 運要素の平均
   - 相互作用の平均
   - ダウンタイムの平均

2. **人気のタグ**
   - レビューで最も多く選択されたタグ

3. **おすすめプレイ人数**
   - レビュー投稿者の50%以上が推奨したプレイ人数

## 検索機能

### 検索パラメータ

検索機能では以下のパラメータを使用できます：

1. **基本情報**
   - キーワード（ゲーム名、日本語名、出版社、デザイナーなど）
   - プレイ人数（最小・最大）
   - プレイ時間（最小・最大）

2. **評価情報**
   - 総合評価（最小・最大）
   - ルールの複雑さ（最小・最大）
   - 運要素（最小・最大）
   - 相互作用（最小・最大）
   - ダウンタイム（最小・最大）

3. **分類情報**
   - メカニクス（複数選択可能）
   - タグ（複数選択可能）
   - おすすめプレイ人数（複数選択可能）

### 検索フロー

1. ユーザーが検索ページで検索条件を設定
2. 検索ボタンクリック時に `searchGames` 関数を呼び出し
3. URLクエリパラメータに検索条件を追加
4. バックエンドの `GamesController#search` アクションで検索を実行
5. 検索結果をフロントエンドに返し、`GameCard` コンポーネントでリスト表示

### 検索実装の詳細

#### フロントエンド側 (`bgr4-front/src/lib/api.ts`)

1. `searchGames` 関数：
   - 検索パラメータをURLクエリパラメータに変換
   - APIエンドポイント `/api/v1/games/search` にリクエスト送信
   - レスポンスを `Game[]` 型で返却

2. 検索フォームコンポーネント：
   - 各検索条件のフォーム要素を提供
   - 検索条件の状態管理
   - 検索実行時のハンドリング

#### バックエンド側 (`bgr4-api/app/controllers/api/v1/games_controller.rb`)

1. `search` アクション：
   - 検索クエリパラメータを解析
   - ActiveRecordクエリを構築
   - 検索条件に基づいてゲームをフィルタリング
   - 結果をJSON形式で返却

### 検索結果の表示

1. 検索結果は `GameCard` コンポーネントを使用してグリッド表示
2. 各カードには以下の情報を表示：
   - ゲーム画像
   - ゲーム名（日本語名があれば優先）
   - 評価スコア
   - プレイ人数
   - プレイ時間
   - カテゴリー（最大3つ）

3. カードクリック時にゲーム詳細ページに遷移 