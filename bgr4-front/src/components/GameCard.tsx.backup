"use client";

import React from "react";
import type { Game, Review } from "@/types/api";
import { UnifiedGameCard } from "@/components/ui/GameCard/UnifiedGameCard";

interface GameCardProps {
  game: Game;
  review?: Review;
  type: "game" | "review";
  useOverallScoreDisplay?: boolean;
  overallScoreVariant?: "default" | "compact" | "large";
  showOverallScoreOverlay?: boolean;
  onReviewUpdated?: () => void;
  variant?: "list" | "grid" | "search" | "review" | "carousel";
  enableSharing?: boolean;
}

/**
 * 既存のGameCardコンポーネントの互換性ラッパー
 * 新しいUnifiedGameCardコンポーネントを使用して実装
 */
export default function GameCard({
  game,
  review,
  type,
  useOverallScoreDisplay = false,
  overallScoreVariant = "compact",
  showOverallScoreOverlay = false,
  onReviewUpdated,
  variant = "list",
  enableSharing = true,
}: GameCardProps) {
  // バリアントのマッピング
  const getCardVariant = () => {
    switch (variant) {
      case "grid":
      case "search":
      case "carousel":
        return "compact";
      case "review":
        return "review";
      case "list":
      default:
        return "list";
    }
  };

  // レビューデータの処理
  const processedGame =
    type === "review" && review
      ? {
          ...game,
          userReview: review,
        }
      : game;

  return (
    <UnifiedGameCard
      game={processedGame}
      variant={getCardVariant()}
      useOverallScoreDisplay={useOverallScoreDisplay}
      overallScoreVariant={overallScoreVariant}
      showOverallScoreOverlay={showOverallScoreOverlay}
      enableSharing={enableSharing}
      onReviewUpdated={onReviewUpdated}
    />
  );
}
