// BGG„Éó„É¨„Ç§ÊôÇÈñìÁØÑÂõ≤„ÉÜ„Çπ„Éà„Çπ„ÇØ„É™„Éó„Éà
import xml2js from 'xml2js';

async function testPlaytimeRange() {
  console.log('‚è±Ô∏è BGG„Éó„É¨„Ç§ÊôÇÈñìÁØÑÂõ≤„ÉÜ„Çπ„ÉàÈñãÂßã...\n');
  
  const testGames = [
    { id: 220308, name: "Gaia Project" },     // ÊúüÂæÖÂÄ§: 60-150ÂàÜ
    { id: 174430, name: "Gloomhaven" },       // ÊúüÂæÖÂÄ§: 60-120ÂàÜ
    { id: 169786, name: "Scythe" },           // ÊúüÂæÖÂÄ§: 90-115ÂàÜ
  ];
  
  for (const game of testGames) {
    try {
      console.log(`üé≤ ${game.name} (BGG ID: ${game.id}) „ÅÆ„Éó„É¨„Ç§ÊôÇÈñì„ÇíÂèñÂæó‰∏≠...`);
      
      const response = await fetch(`https://boardgamegeek.com/xmlapi2/thing?id=${game.id}&stats=1`);
      const xmlData = await response.text();
      const parser = new xml2js.Parser();
      const result = await parser.parseStringPromise(xmlData);
      
      const item = result.items.item[0];
      
      const minPlaytime = item.minplaytime?.[0]?.$.value ? parseInt(item.minplaytime[0].$.value) : null;
      const maxPlaytime = item.maxplaytime?.[0]?.$.value ? parseInt(item.maxplaytime[0].$.value) : null;
      const playingtime = item.playingtime?.[0]?.$.value ? parseInt(item.playingtime[0].$.value) : null;
      
      console.log(`   - ÊúÄÂ∞è„Éó„É¨„Ç§ÊôÇÈñì: ${minPlaytime || '„Å™„Åó'}ÂàÜ`);
      console.log(`   - ÊúÄÂ§ß„Éó„É¨„Ç§ÊôÇÈñì: ${maxPlaytime || '„Å™„Åó'}ÂàÜ`);
      console.log(`   - „Éó„É¨„Ç§ÊôÇÈñì: ${playingtime || '„Å™„Åó'}ÂàÜ`);
      
      if (minPlaytime && maxPlaytime) {
        console.log(`   ‚úÖ ÁØÑÂõ≤Ë°®Á§∫: ${minPlaytime}ÂàÜÔΩû${maxPlaytime}ÂàÜ`);
      } else if (playingtime) {
        const estimatedMin = Math.max(15, Math.floor(playingtime * 0.4));
        console.log(`   üìä Êé®ÂÆöÁØÑÂõ≤: ${estimatedMin}ÂàÜÔΩû${playingtime}ÂàÜ`);
      }
      
      console.log('');
      
      // „É¨„Éº„ÉàÂà∂Èôê
      await new Promise(resolve => setTimeout(resolve, 1100));
      
    } catch (error) {
      console.error(`‚ùå „Ç®„É©„Éº: ${error.message}`);
    }
  }
}

testPlaytimeRange();