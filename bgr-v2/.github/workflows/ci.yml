name: CI/CD Pipeline

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: bgr-v2/package-lock.json
        
    - name: Install dependencies
      run: |
        cd bgr-v2
        npm ci
        
    - name: Run TypeScript type check
      run: |
        cd bgr-v2
        npx tsc --noEmit
        
    - name: Run linting
      run: |
        cd bgr-v2
        npm run lint
        
    - name: Run tests
      run: |
        cd bgr-v2
        npm test
      env:
        CI: true
        
    - name: Run build
      run: |
        cd bgr-v2
        npm run build
        
  e2e-tests:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        cache-dependency-path: bgr-v2/package-lock.json
        
    - name: Install dependencies
      run: |
        cd bgr-v2
        npm ci
        
    - name: Install Playwright
      run: |
        cd bgr-v2
        npx playwright install --with-deps
        
    - name: Run Playwright tests
      run: |
        cd bgr-v2
        npm run test:e2e
      env:
        CI: true
        
    - name: Upload Playwright report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report
        path: bgr-v2/playwright-report/
        retention-days: 30

  deploy:
    runs-on: ubuntu-latest
    needs: [test, e2e-tests]
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        cache-dependency-path: bgr-v2/package-lock.json
        
    - name: Install dependencies
      run: |
        cd bgr-v2
        npm ci
        
    - name: Build for production
      run: |
        cd bgr-v2
        npm run build
      env:
        NODE_ENV: production
        
    - name: Deploy to Netlify
      uses: nwtgck/actions-netlify@v3.0
      with:
        publish-dir: './bgr-v2/out'
        production-branch: main
        github-token: ${{ secrets.GITHUB_TOKEN }}
        deploy-message: "Deploy from GitHub Actions"
        enable-pull-request-comment: false
        enable-commit-comment: true
        overwrites-pull-request-comment: true
      env:
        NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
        NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}

  security-scan:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Run npm audit
      run: |
        cd bgr-v2
        npm audit --audit-level moderate
        
    - name: Run security scan with CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: javascript
        
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3